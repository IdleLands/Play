{"version":3,"sources":["../../src/pages/achievements/achievements.module.ts","../../src/pages/achievements/achievements.ts"],"names":[],"mappings":"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","file":"15.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { AchievementsPage } from './achievements';\nimport { GlobalComponentsModule } from '../../components/components.module';\nimport { IonicPageModule } from 'ionic-angular';\n\n@NgModule({\n  declarations: [AchievementsPage],\n  imports: [GlobalComponentsModule, IonicPageModule.forChild(AchievementsPage)],\n})\nexport class AchievementsPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/achievements/achievements.module.ts","\nimport * as _ from 'lodash';\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IonicPage, ModalController, ViewController, NavController, NavParams } from 'ionic-angular';\n\nimport { LocalStorageService } from 'ng2-webstorage';\n\nimport { AppState, Primus, Theme } from '../../services';\nimport { PlayComponent } from '../../components/play.component';\n\nimport { Achievement } from '../../models';\n\n@IonicPage({\n  segment: 'achievements'\n})\n@Component({\n  selector: 'page-achievements',\n  templateUrl: 'achievements.html'\n})\nexport class AchievementsPage extends PlayComponent implements OnInit, OnDestroy {\n\n  achievements$: any;\n  public achievements: Achievement[] = [];\n\n  constructor(\n    public appState: AppState,\n    public primus: Primus,\n    public navCtrl: NavController,\n    public modalCtrl: ModalController\n  ) {\n    super(appState, primus, navCtrl);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.achievements$ = this.appState.achievements.subscribe(data => {\n      this.setAchievements(data);\n      const totalTiers = _.sumBy(data, 'tier');\n      this.updatePageData(`Total Achievements: ${data.length}<br>Total Tiers: ${totalTiers}`);\n    });\n\n    this.primus.requestAchievements();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.achievements$.unsubscribe();\n  }\n\n  setAchievements(achievements: Achievement[]) {\n    this.achievements = achievements;\n  }\n\n  viewRewards(achievement) {\n    this.modalCtrl.create(AchievementModal, { achievement }).present();\n  }\n\n}\n\n@Component({\n  template: `\n<ion-header class=\"modal {{ theme.currentTheme }}\">\n  <ion-toolbar color=\"primary\">\n    <ion-title>\n      {{ achievement.name }} Rewards\n    </ion-title>\n    <ion-buttons start>\n      <button ion-button (click)=\"viewCtrl.dismiss()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"modal {{ theme.currentTheme }}\">\n  <ion-grid text-center>\n    <ion-row>\n      <ion-col>{{ achievement.desc }}</ion-col>\n    </ion-row>\n    <ion-row *ngFor=\"let reward of rewards\">\n      <ion-col text-right><strong>{{ reward.type }}</strong></ion-col> \n      <ion-col text-left>{{ reward.value }}</ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n`\n})\nexport class AchievementModal implements OnInit {\n\n  public rewards: Array<{ type, value }> = [];\n  public achievement: Achievement;\n\n  constructor(\n    public viewCtrl: ViewController,\n    public navParams: NavParams,\n    public storage: LocalStorageService,\n    public theme: Theme\n  ) {}\n\n  ngOnInit() {\n    this.achievement = this.navParams.get('achievement');\n\n    _.each(this.achievement.rewards, reward => {\n      if(reward.type === 'stats') {\n        _.each(reward, (val, key) => {\n          if(key === 'type') return;\n\n          const statType = key.split('Display').join('').toUpperCase();\n          const statValue = val || reward[`${key}Display`];\n\n          const existing = _.find(this.rewards, { type: statType });\n\n          if(existing) {\n            existing.value += statValue;\n\n          } else {\n            const newReward = {\n              type: statType,\n              value: statValue\n            };\n\n            this.rewards.push(newReward);\n          }\n        });\n\n      } else if(reward.type === 'pet') {\n        this.rewards.push({ type: 'Pet', value: reward.pet });\n\n      } else if(reward.type === 'petclass') {\n        this.rewards.push({ type: 'Pet Class', value: reward.petclass });\n\n      } else if(reward.type === 'petattr') {\n        this.rewards.push({ type: 'Pet Descriptor', value: reward.petattr });\n\n      } else if(reward.type === 'title') {\n        this.rewards.push({ type: 'Title', value: reward.title });\n\n      } else if(reward.type === 'personality') {\n        this.rewards.push({ type: 'Personality', value: reward.personality });\n\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/achievements/achievements.ts"],"sourceRoot":""}